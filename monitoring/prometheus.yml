# Prometheus configuration for photon-mlir-bridge monitoring
# Comprehensive monitoring setup for compiler, runtime, and hardware metrics

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'photon-mlir-production'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Rules configuration
rule_files:
  - "/etc/prometheus/rules/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring  
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # photon-mlir-bridge compiler metrics
  - job_name: 'photon-compiler'
    scrape_interval: 10s
    metrics_path: '/metrics'
    static_configs:
      - targets: 
        - 'photon-compiler:8080'
        - 'photon-compiler:8081'
        - 'photon-compiler:8082'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - source_labels: [__address__]
        regex: '([^:]+):(.*)'
        target_label: __address__
        replacement: '${1}:${2}'

  # Hardware device metrics
  - job_name: 'photonic-devices'
    scrape_interval: 5s
    metrics_path: '/device/metrics'
    static_configs:
      - targets:
        - 'lightmatter-device-1:9100'
        - 'lightmatter-device-2:9100'
        - 'mit-photonic-1:9100'
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'photon_device_.*'
        target_label: device_class
        replacement: 'photonic'

  # Node exporter for system metrics
  - job_name: 'node-exporter'
    scrape_interval: 15s
    static_configs:
      - targets:
        - 'node-exporter:9100'
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 'node-exporter:9100'

  # Application runtime metrics
  - job_name: 'photon-runtime'
    scrape_interval: 10s
    metrics_path: '/runtime/metrics'
    static_configs:
      - targets:
        - 'photon-runtime:8090'
    metric_relabel_configs:
      - source_labels: [job]
        target_label: service
        replacement: 'photon-mlir-runtime'

  # Compilation service metrics
  - job_name: 'compilation-service'
    scrape_interval: 30s
    metrics_path: '/compilation/metrics'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - photon-mlir
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app]
        action: keep
        regex: photon-compiler
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)

  # Database metrics (if using PostgreSQL for experiment tracking)
  - job_name: 'postgres-exporter'
    scrape_interval: 30s
    static_configs:
      - targets:
        - 'postgres-exporter:9187'
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'pg_.*'
        target_label: database
        replacement: 'photon_experiments'

  # Redis metrics (if using Redis for caching)
  - job_name: 'redis-exporter'
    scrape_interval: 30s
    static_configs:
      - targets:
        - 'redis-exporter:9121'

  # Jupyter notebook metrics (for experimentation tracking)
  - job_name: 'jupyter-metrics'
    scrape_interval: 60s
    metrics_path: '/metrics'
    static_configs:
      - targets:
        - 'jupyter-hub:8000'
    scrape_timeout: 30s

  # Custom photonic simulation metrics
  - job_name: 'photonic-simulation'
    scrape_interval: 20s
    metrics_path: '/simulation/metrics'
    static_configs:
      - targets:
        - 'photon-simulator:8503'
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'simulation_.*'
        target_label: service_type
        replacement: 'simulation'

  # Load balancer metrics
  - job_name: 'nginx-exporter'
    scrape_interval: 30s
    static_configs:
      - targets:
        - 'nginx-exporter:9113'

# Storage configuration
storage:
  tsdb:
    path: /prometheus/data
    retention.time: 30d
    retention.size: 100GB
    wal-compression: true

# Remote write configuration (for long-term storage)
remote_write:
  - url: "https://prometheus-remote-write.example.com/api/v1/write"
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'photon_.*|compilation_.*|device_.*'
        action: keep
    queue_config:
      capacity: 10000
      max_samples_per_send: 5000
      batch_send_deadline: 10s

# Query configuration
query:
  max_concurrency: 20
  timeout: 2m
  max_samples: 50000000