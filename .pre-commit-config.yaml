# Pre-commit hooks configuration for photon-mlir-bridge
# See https://pre-commit.com for more information

repos:
  # Built-in hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        exclude: ^(.*\.md|.*\.patch)$
      - id: end-of-file-fixer
        exclude: ^(.*\.patch)$
      - id: check-yaml
        exclude: ^(.*\.github/.*)$
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-merge-conflict
      - id: check-symlinks
      - id: detect-private-key
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Python formatting and linting
  - repo: https://github.com/psf/black
    rev: 23.3.0
    hooks:
      - id: black
        language_version: python3
        files: ^python/.*\.py$

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile, black]
        files: ^python/.*\.py$

  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        files: ^python/.*\.py$
        args:
          - --max-line-length=88
          - --extend-ignore=E203,W503
          - --exclude=.git,__pycache__,build,dist,.eggs

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.3.0
    hooks:
      - id: mypy
        files: ^python/.*\.py$
        additional_dependencies: [types-all]
        args: [--config-file=pyproject.toml]

  # C++ formatting and linting
  - repo: https://github.com/pre-commit/mirrors-clang-format
    rev: v16.0.6
    hooks:
      - id: clang-format
        files: \.(cpp|cc|cxx|c|h|hpp|hxx)$
        args: [-i, --style=file]

  - repo: local
    hooks:
      - id: clang-tidy
        name: clang-tidy
        entry: clang-tidy
        language: system
        files: \.(cpp|cc|cxx|c)$
        args:
          - --config-file=.clang-tidy
          - --header-filter=.*
        exclude: ^(build/|external/|third_party/)

  # CMake formatting
  - repo: https://github.com/cheshirekow/cmake-format-precommit
    rev: v0.6.13
    hooks:
      - id: cmake-format
        additional_dependencies: [pyyaml]
        files: \.(cmake|CMakeLists\.txt)$

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        files: ^python/.*\.py$
        args: [-c, pyproject.toml]

  - repo: https://github.com/gitguardian/ggshield
    rev: v1.18.0
    hooks:
      - id: ggshield
        language: python
        stages: [commit]

  # YAML and JSON formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.0-alpha.9-for-vscode
    hooks:
      - id: prettier
        files: \.(yaml|yml|json)$
        exclude: ^(\.github/.*|.*\.md)$

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.35.0
    hooks:
      - id: markdownlint
        args: [--config, .markdownlint.json]
        exclude: ^(CHANGELOG\.md)$

  # Documentation checks
  - repo: local
    hooks:
      - id: doxygen-check
        name: doxygen-check
        entry: python scripts/check_doxygen.py
        language: python
        files: \.(cpp|cc|cxx|c|h|hpp|hxx)$
        pass_filenames: false

  # MLIR-specific checks
  - repo: local
    hooks:
      - id: mlir-format
        name: mlir-opt format check
        entry: python scripts/check_mlir_format.py
        language: python
        files: \.(mlir|td)$
        pass_filenames: true

      - id: tablegen-format
        name: TableGen format check
        entry: python scripts/check_tablegen_format.py
        language: python
        files: \.td$
        pass_filenames: true

  # License header check
  - repo: local
    hooks:
      - id: license-header
        name: License header check
        entry: python scripts/check_license_header.py
        language: python
        files: \.(cpp|cc|cxx|c|h|hpp|hxx|py)$
        pass_filenames: true

  # Dependency vulnerability scanning
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        files: ^(requirements.*\.txt|pyproject\.toml)$

  # Spell checking
  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.5
    hooks:
      - id: codespell
        args:
          - --ignore-words-list=nd,te,ba,fo,ser
          - --skip="*.git,*.pyc,*.json,build,dist"
        exclude: ^(.*\.patch|.*\.lock)$

  # Performance regression detection
  - repo: local
    hooks:
      - id: performance-check
        name: Performance regression check
        entry: python scripts/check_performance_regression.py
        language: python
        files: \.(cpp|cc|cxx|c|py)$
        stages: [pre-push]
        pass_filenames: false

  # Hardware-specific validation
  - repo: local
    hooks:
      - id: photonic-validation
        name: Photonic hardware validation
        entry: python scripts/validate_photonic_code.py
        language: python
        files: photonic/.*\.(cpp|cc|cxx|c|h|hpp|hxx|py)$
        pass_filenames: true

# Global configuration
default_language_version:
  python: python3.11

exclude: |
  (?x)^(
    build/.*|
    external/.*|
    third_party/.*|
    \.git/.*|
    .*\.patch|
    .*\.diff
  )$

# CI-specific configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [clang-tidy, doxygen-check, performance-check]
  submodules: false