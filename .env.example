# photon-mlir-bridge Environment Configuration
# Copy this file to .env and update with your specific values

# =============================================================================
# Development Environment Configuration
# =============================================================================

# Development mode (set to 1 for development features)
PHOTON_DEV_MODE=1

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
PHOTON_LOG_LEVEL=INFO

# Enable verbose compilation output
PHOTON_VERBOSE=0

# Enable experimental features
PHOTON_EXPERIMENTAL=0

# =============================================================================
# Build Configuration
# =============================================================================

# C/C++ Compiler settings
CC=clang-17
CXX=clang++-17

# CMake build type (Debug, Release, RelWithDebInfo, MinSizeRel)
CMAKE_BUILD_TYPE=Debug

# Number of parallel build jobs
CMAKE_BUILD_PARALLEL_LEVEL=4

# Enable/disable specific build features
PHOTON_ENABLE_TESTS=ON
PHOTON_ENABLE_PYTHON=ON
PHOTON_ENABLE_DOCS=ON
PHOTON_ENABLE_BENCHMARKS=ON

# =============================================================================
# LLVM/MLIR Configuration
# =============================================================================

# LLVM/MLIR installation path
LLVM_DIR=/usr/lib/llvm-17
MLIR_DIR=/usr/lib/llvm-17

# LLVM version
LLVM_VERSION_MAJOR=17
MLIR_VERSION_MAJOR=17

# =============================================================================
# Python Configuration
# =============================================================================

# Python interpreter
PYTHON_EXECUTABLE=/usr/bin/python3.11

# Python path for development
PYTHONPATH=/workspace/python:/workspace/build/python

# Python package installation mode (develop, install)
PYTHON_INSTALL_MODE=develop

# =============================================================================
# Hardware Configuration
# =============================================================================

# Default photonic hardware target
PHOTON_DEFAULT_TARGET=simulator

# Lightmatter Envise configuration
LIGHTMATTER_HOST=localhost
LIGHTMATTER_PORT=8080
LIGHTMATTER_API_KEY=your_api_key_here

# MIT Silicon Photonics configuration
MIT_PHOTONICS_HOST=localhost
MIT_PHOTONICS_PORT=8081

# Simulator configuration
PHOTON_SIMULATOR_BACKEND=cpu
PHOTON_SIMULATOR_THREADS=4
PHOTON_SIMULATOR_PRECISION=float32

# =============================================================================
# Testing Configuration
# =============================================================================

# Test framework settings
PYTEST_ARGS=--verbose --tb=short
CTEST_PARALLEL_LEVEL=4

# Test data location
PHOTON_TEST_DATA_DIR=/workspace/tests/data

# Enable hardware-in-the-loop testing (requires actual hardware)
PHOTON_ENABLE_HIL_TESTS=0

# Performance testing configuration
PHOTON_ENABLE_PERF_TESTS=1
PHOTON_PERF_BASELINE_DIR=/workspace/tests/baselines

# =============================================================================
# Monitoring and Observability
# =============================================================================

# Enable metrics collection
PHOTON_ENABLE_METRICS=1

# Metrics backend (prometheus, influxdb, file)
PHOTON_METRICS_BACKEND=file
PHOTON_METRICS_FILE=/tmp/photon_metrics.json

# OpenTelemetry configuration
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317
OTEL_SERVICE_NAME=photon-mlir-bridge
OTEL_RESOURCE_ATTRIBUTES=service.version=0.1.0

# Prometheus configuration
PROMETHEUS_PORT=9090
PROMETHEUS_SCRAPE_INTERVAL=15s

# =============================================================================
# Security Configuration
# =============================================================================

# Enable security features
PHOTON_ENABLE_SECURITY=1

# Code signing configuration
PHOTON_SIGN_CODE=0
PHOTON_SIGNING_KEY_PATH=/path/to/signing/key

# Runtime security
PHOTON_SANDBOX_MODE=1
PHOTON_MAX_MEMORY_MB=8192
PHOTON_MAX_COMPILE_TIME_SEC=300

# =============================================================================
# Debugging and Profiling
# =============================================================================

# Enable debug symbols
PHOTON_DEBUG_SYMBOLS=1

# GDB/LLDB configuration
PHOTON_DEBUGGER=lldb

# Profiling configuration
PHOTON_ENABLE_PROFILING=0
PHOTON_PROFILER=perf

# Memory debugging
PHOTON_MEMORY_CHECK=0
PHOTON_SANITIZERS=address,undefined

# =============================================================================
# Documentation Configuration
# =============================================================================

# Sphinx documentation settings
SPHINX_BUILD_DIR=/workspace/docs/_build
SPHINX_SOURCE_DIR=/workspace/docs

# API documentation generation
PHOTON_GENERATE_API_DOCS=1
PHOTON_API_DOCS_FORMAT=html

# =============================================================================
# Continuous Integration Configuration
# =============================================================================

# CI mode (disables interactive features)
CI=0

# GitHub Actions specific
GITHUB_TOKEN=your_github_token_here
GITHUB_REPOSITORY=danieleschmidt/photon-mlir-bridge

# Coverage reporting
CODECOV_TOKEN=your_codecov_token_here
COVERAGE_TARGET=90

# =============================================================================
# Cache Configuration
# =============================================================================

# Enable build caching
PHOTON_ENABLE_CACHE=1

# Cache directory
PHOTON_CACHE_DIR=/home/developer/.cache/photon-mlir

# ccache settings
CCACHE_DIR=/home/developer/.cache/ccache
CCACHE_MAXSIZE=5G

# =============================================================================
# Licensing and Compliance
# =============================================================================

# License compliance checking
PHOTON_CHECK_LICENSES=1

# SBOM generation
PHOTON_GENERATE_SBOM=1
PHOTON_SBOM_FORMAT=spdx-json

# =============================================================================
# Advanced Configuration
# =============================================================================

# Custom MLIR dialect paths
PHOTON_CUSTOM_DIALECTS_PATH=/workspace/dialects

# Plugin directory
PHOTON_PLUGIN_DIR=/workspace/plugins

# Temporary directory
PHOTON_TEMP_DIR=/tmp/photon-mlir

# Maximum number of threads for compilation
PHOTON_MAX_THREADS=8

# Enable experimental optimizations
PHOTON_EXPERIMENTAL_OPTS=0

# Memory pool size for compilation
PHOTON_MEMORY_POOL_SIZE=1G

# =============================================================================
# Development Tools Configuration
# =============================================================================

# Clang-format style
CLANG_FORMAT_STYLE=file

# Clang-tidy configuration
CLANG_TIDY_CHECKS=-*,readability-*,modernize-*,performance-*

# Pre-commit hook configuration
PRE_COMMIT_COLOR=always

# =============================================================================
# External Service Integration
# =============================================================================

# Docker registry for custom images
DOCKER_REGISTRY=ghcr.io/danieleschmidt

# Kubernetes configuration
KUBECONFIG=/home/developer/.kube/config
KUBERNETES_NAMESPACE=photon-mlir

# Cloud provider configuration
AWS_REGION=us-west-2
GCP_PROJECT_ID=your-gcp-project
AZURE_SUBSCRIPTION_ID=your-azure-subscription